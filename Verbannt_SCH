
-- This lua is based off of the Kinematics template and uses Motenten globals. --
	--Authors of this file--
		--Byrne (Asura)-- co-author of blm lua which is the back bone of this lua.
		--Gamergiving (Asura)-- 
		--Verbannt (Asura)-- Reworked arguments [primary author of this lua]  
        --Taberif (Asura) requested different functionality--
-------------------------------------------------------------------------------------------------------------------
-- Setup functions for this job.  Generally should not be modified.
-------------------------------------------------------------------------------------------------------------------
 
-- Initialization function for this job file.
function get_sets()
    mote_include_version = 2
     
    -- Load and initialize the include file.
    include('Mote-Include.lua')
    include('organizer-lib')
 
end
 
 
-- Setup vars that are user-independent.  state.Buff vars initialized here will automatically be tracked.
 
-------------------------------------------------------------------------------------------------------------------
-- User setup functions for this job.  Recommend that these be overridden in a sidecar file.
-------------------------------------------------------------------------------------------------------------------
 
-- Setup vars that are user-dependent.  Can override this function in a sidecar file.

function job_setup()
    state.OffenseMode:options('None', 'Locked')   
    state.weaponlock = M('None', 'Locked', 'Tupsimati', 'Akademos')				-- 	Left Ctrl ~
    state.CastingMode = M('Normal', 'Mid', 'Resistant')  						-- 	Left Windows key ~
    state.IdleMode = M('Normal', 'PDT', 'MDT')  								-- 	Left Alt ~
	state.StunMode = M( 'StunRecast', 'StunAcc', 'StunHybrid') 					--	Left Ctrl 1
	state.Moving  = M(false, "Moving" )
    
	MagicBurstIndex = 0
    element_table = L{'Earth','Wind','Ice','Fire','Water','Lightning'}
 
 
    lowTierNukes = S{'Stone', 'Water', 'Aero', 'Fire', 'Blizzard', 'Thunder',
        'Stone II', 'Water II', 'Aero II', 'Fire II', 'Blizzard II', 'Thunder II',
        'Stone III', 'Water III', 'Aero III', 'Fire III', 'Blizzard III', 'Thunder III',}
	
	HighTierNuke = S{'stone IV', 'stone V', 'water IV', 'water V', 'fire IV', 'fire IV',
	'blizzard IV', 'blizzard IV', 'thunder IV', 'thunder V'}
 
 	Helix = {'Pyrohelix','Pyrohelix II','Cryohelix','Cryohelix II','Anemohelix','Anemohelix II',
	'Geohelix','Geohelix II','Ionohelix','Ionohelix II','Hydrohelix','Hydrohelix II','Luminohelix','Luminohelix II',
	'Noctohelix','Noctohelix II',}
	
	Storm = {'Firestorm','Firestorm II','Hailstorm','Hailstorm II','Windstorm',
	'Windstorm II','Sandstorm','Sandstorm II','Thunderstorm','Thunderstorm II',
	 'Rainstorm','Rainstorm II','Aurorastorm','Aurorastorm II','Voidstorm','Voidstorm II'}
 
    degrade_array = {
        ['Fire'] = {'Fire','Fire II','Fire III','Fire IV','Fire V'},
        ['Firega'] = {'Firaga','Firaga II'},
        ['Ice'] = {'Blizzard','Blizzard II','Blizzard III','Blizzard IV','Blizzard V'},
        ['Icega'] = {'Blizzaga','Blizzaga II'},
        ['Wind'] = {'Aero','Aero II','Aero III','Aero IV','Aero V'},
        ['Windga'] = {'Aeroga','Aeroga II'},
        ['Earth'] = {'Stone','Stone II','Stone III','Stone IV','Stone V'},
        ['Earthga'] = {'Stonega','Stonega II'},
        ['Lightning'] = {'Thunder','Thunder II','Thunder III','Thunder IV','Thunder V'},
        ['Lightningga'] = {'Thundaga','Thundaga II'},
        ['Water'] = {'Water', 'Water II','Water III', 'Water IV','Water V'},
        ['Waterga'] = {'Waterga','Waterga II'},
        ['Aspirs'] = {'Aspir','Aspir II',},
        ['Sleepgas'] = {'Sleepga','Sleepga II'}
    }
    -- Additional local binds
    send_command('bind ^` gs c cycle weaponlock ')
    send_command('bind @` gs c cycle CastingMode ')
	send_command('bind !` gs c cycle IdleMode ')
	send_command('bind ^1 gs c cycle StunMode ')
	send_command('bind f12 send_command(/ma stun <t>)')
	send_command('bind !1 gs c cycle  ')
 
 
    organizer_items = {}
    select_default_macro_book()
end
 
-- Called when this job file is unloaded (eg: job change)
function user_unload()
    send_command('unbind ^`')
    send_command('unbind @`')
    send_command('unbind !`')
	send_command('unbind ^1')
	send_command('unbind @1')
	send_command('unbind !1')
	end
 
 
-- Define sets and vars used by this job file.
function init_gear_sets()
    --------------------------------------
    -- Start defining the sets
    --------------------------------------
     
    ---- Precast Sets ----
     
    -- Precast sets to enhance JAs
	
    --sets.precast.JA[''] = {}
 
    sets.precast.JA['Tabula Rasa'] = {legs="Pedagogy pants"}
	 
    -- Can put HP/MP set here for convert
	
    --sets.precast.JA['Convert'] = {}
 
 
    -- Base precast Fast Cast set is combined with different art/spell gear so make sure you place FC gear here,
	-- other pieces will be swapped in with the original FC if you add the slot and item in the set_combine
 
    sets.precast.FC = {main="Marin Staff",ammo="Incantor Stone",
        head="Peda. M.Board",neck="Orunmila's Torque",ear2="Loquac. Earring",body="Helios Jacket",hands="Gende. Gages +1",
		ring1="Prolix Ring",back="Swith Cape",waist="Witful Belt",legs="Psycloth lappas",feet="Regal Pumps"}
		
    sets.precast.FC['Enhancing Magic'] = set_combine(sets.precast.FC, {waist="Siegel Sash"})
    sets.precast.FC['Enfeebling Magic'] = set_combine(sets.precast.FC, {})
    sets.precast.FC['Elemental Magic'] = set_combine(sets.precast.FC, {ear1="Barkarole earring"})
    sets.precast.FC['Healing Magic'] = set_combine(sets.precast.FC, {ear1="Mendicant's Earring"})
 
    -- Different stun sets can be used for different situations depending on buffs active on you.
	-- selected set will equip when casting stun regardless of buffs, thus allowing you to lock what gear you need
	-- to be in with out disabling the lua as most lua's have you do to prevent gearswaps during 2h, 

    sets.midcast.StunRecast = {}
    sets.midcast.StunAcc = {}
    sets.midcast.StunHybrid = {}

    
    -- Weaponskill sets

    -- Default set for any weaponskill that isn't any more specifically defined

    sets.precast.WS = {}

    -- Specific weaponskill sets.  Uses the base set if an appropriate WSMod version isn't found.
	-- Use highest mp value gear as well as ANY tp bonus gear. Mp restored is 
	-- 1000%(20% of total mp) 2000%(40% of total mp) and 3000% (60% of total mp)
    sets.precast.WS['Myrkr'] = {body={ name="Helios Jacket", augments={'"Fast Cast"+5','MND+10',}},
		hands={ name="Amalric Gages", augments={'MP+60','Mag. Acc.+15','"Mag.Atk.Bns."+15',}},
		legs={ name="Amalric Slops", augments={'MP+60','Mag. Acc.+15','"Mag.Atk.Bns."+15',}},
		feet={ name="Psycloth Boots", augments={'MP+50','INT+7','"Conserve MP"+6',}},
		neck="Sanctity Necklace",waist="Yamabuki-no-Obi",head="Pixie Hairpin +1",ammo="Kalboron Stone",
		left_ear="Halasz Earring",right_ear="Evans Earring",left_ring="Mephitas's Ring",right_ring="Bifrost Ring",back="Pahtli Cape",}
 
	sets.midcast.Perpetuance = set_combine(sets.midcast['Enhancing Magic'],{hands="Arbatel Bracers"})
	sets.midcast.Rapture = set_combine(sets.midcast['Healing Magic'], {})
	sets.midcast.Ebullience = set_combine(sets.midcast['Elemental Magic'], {})
 
    sets.midcast['Healing Magic'] = {main={ name="Serenity", augments={'MP+40','Enha.mag. skill +7','"Cure" spellcasting time -5%',}},
			sub="Umbra Strap",ammo="Staunch Tathlum",head="Vanya Hood",
			body={ name="Gendewitha Bliaut", augments={'Phys. dmg. taken -1%','"Cure" potency +2%',}},
			legs="Gyve Trousers",feet="Regal Pumps",neck="Henic Torque",
			waist="Hachirin-no-Obi",left_ear="Mendi. Earring",left_ring="Ephedra Ring",right_ring="Ephedra Ring",back="Pahtli Cape",}
    sets.midcast['Enhancing Magic'] = {main="Bolelabunga",sub="Ammurapi Shield",ammo="Staunch Tathlum",head="Umuthi Hat",
		body={ name="Witching Robe", augments={'MP+50','Mag. Acc.+15','"Mag.Atk.Bns."+15','"Refresh"+1',}},hands="Gende. Gages +1",
		legs="Portent Pants",feet="Regal Pumps",neck="Melic Torque",waist="Hachirin-no-Obi",back="Pahtli Cape",}
    sets.midcast.Refresh = set_combine(sets.midcast['Enhancing Magic'], {})
    sets.midcast.Haste = set_combine(sets.midcast['Enhancing Magic'], {})
    sets.midcast.Phalanx = set_combine(sets.midcast['Enhancing Magic'], {})
    sets.midcast.Aquaveil = set_combine(sets.midcast['Enhancing Magic'], {})
    sets.midcast.Stoneskin = set_combine(sets.midcast['Enhancing Magic'], {Head="Umuthi hat",waist="Siegel Sash"})
	-- obi do not increase helix damage as it always gets a boost from day / weather and dark arts, belts specifically add no damage
	-- go for MAB and MACC for helix, replace elemental set with resistant if macc is an issue cap for dot is 9999/toc, initial dmg can vary,
	sets.midcast['Helix'] = { main={ name="Akademos", augments={'INT+15','"Mag.Atk.Bns."+15','Mag. Acc.+15',}},
		sub="Niobid Strap",ammo="Kalboron Stone",
		head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
		body={ name="Merlinic Jubbah", augments={'Mag. Acc.+20 "Mag.Atk.Bns."+20','Magic burst dmg.+3%','CHR+9','Mag. Acc.+14','"Mag.Atk.Bns."+11',}},
		hands={ name="Amalric Gages", augments={'MP+60','Mag. Acc.+15','"Mag.Atk.Bns."+15',}},
		legs={ name="Merlinic Shalwar", augments={'Mag. Acc.+25 "Mag.Atk.Bns."+25','Magic burst dmg.+5%','INT+7','Mag. Acc.+10','"Mag.Atk.Bns."+15',}},
		feet={ name="Merlinic Crackows", augments={'Mag. Acc.+20 "Mag.Atk.Bns."+20','Magic burst dmg.+9%','INT+7','Mag. Acc.+4','"Mag.Atk.Bns."+12',}},
		neck="Mizu. Kubikazari",left_ear="Hecate's Earring",right_ear="Barkaro. Earring",left_ring="Mujin Band",right_ring="Locus Ring",back="Toro Cape",}
	sets.midcast['Enfeebling Magic'] = {}
    sets.midcast['Enfeebling Magic'].Mid = set_combine(sets.midcast['Enfeebling Magic'], {ear1="Mendicant's earring"})
    sets.midcast['Enfeebling Magic'].Resistant = set_combine(sets.midcast['Enfeebling Magic'].Mid, {ear1="Healing Earring"}) 
    sets.midcast.ElementalEnfeeble = sets.midcast['Enfeebling Magic']
 
    sets.midcast['Dark Magic'] = {main={ name="Rubicundity", augments={'Mag. Acc.+6','"Mag.Atk.Bns."+4','"Conserve MP"+3',}},
		sub="Genbu's Shield",ammo="Kalboron Stone",neck="Erra Pendant",
		head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
		body={ name="Merlinic Jubbah", augments={'Mag. Acc.+20 "Mag.Atk.Bns."+20','Magic burst dmg.+3%','CHR+9','Mag. Acc.+14','"Mag.Atk.Bns."+11',}},
		hands={ name="Amalric Gages", augments={'MP+60','Mag. Acc.+15','"Mag.Atk.Bns."+15',}},
		legs={ name="Merlinic Shalwar", augments={'Mag. Acc.+25 "Mag.Atk.Bns."+25','Magic burst dmg.+5%','INT+7','Mag. Acc.+10','"Mag.Atk.Bns."+15',}},
		feet={ name="Merlinic Crackows", augments={'Mag. Acc.+20 "Mag.Atk.Bns."+20','Magic burst dmg.+9%','INT+7','Mag. Acc.+4','"Mag.Atk.Bns."+12',}},
		waist="Fucho-no-Obi",left_ear="Friomisi Earring",right_ear="Barkaro. Earring",left_ring="Evanescence Ring",right_ring="Archon Ring",back="Argocham. Mantle",}
 
    -- Elemental Magic sets
	-- Mid, resistant and high tier nuke are toggled by left windows key and ~
    
    sets.midcast['Elemental Magic'] = {main={ name="Akademos", augments={'INT+15','"Mag.Atk.Bns."+15','Mag. Acc.+15',}},
			sub="Niobid Strap",ammo="Kalboron Stone",
			head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
			body={ name="Merlinic Jubbah", augments={'Mag. Acc.+20 "Mag.Atk.Bns."+20','Magic burst dmg.+3%','CHR+9','Mag. Acc.+14','"Mag.Atk.Bns."+11',}},
			hands={ name="Amalric Gages", augments={'MP+60','Mag. Acc.+15','"Mag.Atk.Bns."+15',}},
			legs={ name="Merlinic Shalwar", augments={'Mag. Acc.+25 "Mag.Atk.Bns."+25','Magic burst dmg.+5%','INT+7','Mag. Acc.+10','"Mag.Atk.Bns."+15',}},
			feet={ name="Merlinic Crackows", augments={'Mag. Acc.+20 "Mag.Atk.Bns."+20','Magic burst dmg.+9%','INT+7','Mag. Acc.+4','"Mag.Atk.Bns."+12',}},
			neck="Mizu. Kubikazari",waist="Hachirin-no-Obi",left_ear="Friomisi Earring",right_ear="Barkaro. Earring",left_ring="Mujin Band",right_ring="Locus Ring",back="Toro Cape",}
    
	sets.midcast['Elemental Magic'].Mid = set_combine(sets.midcast['Elemental Magic'], {main="Grioavolr"})
    sets.midcast['Elemental Magic'].Resistant = set_combine(sets.midcast['Elemental Magic'].Mid, {main="Grioavolr",ear1="Lifestorm earring",ear2="Psystorm earring",
			feet="Jhakri pigaches +1"})
    sets.midcast['Elemental Magic'].HighTierNuke = set_combine(sets.midcast['Elemental Magic'], {main="Grioavolr"})
    sets.midcast['Elemental Magic'].HighTierNuke.Mid = set_combine(sets.midcast['Elemental Magic'].Mid, {})
    sets.midcast['Elemental Magic'].HighTierNuke.Resistant = set_combine(sets.midcast['Elemental Magic'].Resistant, {})
 
    sets.midcast.Impact = set_combine(sets.midcast['Elemental Magic'], {head=empty, body="Twilight Cloak"})

    --Set to be equipped when Day/Weather match current spell element

    sets.Obi = {waist='Hachirin-no-Obi'}
 
    -- Resting sets
	
    sets.resting = {}
 
    -- Idle normal is when no defensive set is selected,

    sets.idle.Normal = {main={ name="Akademos", augments={'INT+15','"Mag.Atk.Bns."+15','Mag. Acc.+15',}},
    sub="Umbra Strap",ammo="Homiliary",
    head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
    body={ name="Witching Robe", augments={'MP+50','Mag. Acc.+15','"Mag.Atk.Bns."+15','"Refresh"+1',}},
	hands="Serpentes Cuffs",legs="Assid. Pants +1",feet="Serpentes Sabots",
    neck="Sanctity Necklace",waist="Fucho-no-Obi",left_ear="Ethereal Earring",right_ear="Eabani Earring",left_ring="Defending Ring",
    right_ring={ name="Dark Ring", augments={'Enemy crit. hit rate -3','Magic dmg. taken -4%','Phys. dmg. taken -3%',}},back="Solemnity Cape",}
 
    -- Idle mode that keeps PDT gear on, but doesn't prevent normal gear swaps for precast/etc.
    sets.idle.PDT = {main="Earth Staff",sub="Umbra Strap",ammo="Staunch Tathlum",
		head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
		body={ name="Witching Robe", augments={'MP+50','Mag. Acc.+15','"Mag.Atk.Bns."+15','"Refresh"+1',}},
		hands={ name="Hagondes Cuffs +1", augments={'Phys. dmg. taken -2%','"Mag.Atk.Bns."+13',}},
		legs="Assid. Pants +1",feet="Mallquis Clogs +1",neck="Twilight Torque",
		waist="Fucho-no-Obi",left_ear="Ethereal Earring",right_ear="Eabani Earring",left_ring="Defending Ring",
		right_ring={ name="Dark Ring", augments={'Enemy crit. hit rate -3','Magic dmg. taken -4%','Phys. dmg. taken -3%',}},back="Solemnity Cape",}
	sets.idle.MDT = {main="Earth Staff",sub="Umbra Strap",ammo="Staunch Tathlum",
			head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
			body={ name="Witching Robe", augments={'MP+50','Mag. Acc.+15','"Mag.Atk.Bns."+15','"Refresh"+1',}},
			hands={ name="Hagondes Cuffs +1", augments={'Phys. dmg. taken -2%','"Mag.Atk.Bns."+13',}},
			legs="Assid. Pants +1",feet="Mallquis Clogs +1",neck="Twilight Torque",
			waist="Fucho-no-Obi",left_ear="Ethereal Earring",right_ear="Eabani Earring",left_ring="Defending Ring",
			right_ring={ name="Dark Ring", augments={'Enemy crit. hit rate -3','Magic dmg. taken -4%','Phys. dmg. taken -3%',}},back="Solemnity Cape",}
	
    sets.Adoulin = {
        body="Councilor's Garb",
    }

    sets.MoveSpeed = {feet = "Herald's Gaiters",}
    
             
    sets.TreasureHunter = {waist="Chaac Belt"}
 
    --- PDT set is designed to be used when engaged and defense is set to pdt, this is not when idle is set to pdt,
	---pdt override any engaged set and can be removed by pressing right alt and f12, this set is usefull when engaging for trusts
	
    sets.defense.PDT = {main="Earth Staff",sub="Umbra Strap",ammo="Staunch Tathlum",
			head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
			body={ name="Witching Robe", augments={'MP+50','Mag. Acc.+15','"Mag.Atk.Bns."+15','"Refresh"+1',}},
			hands={ name="Hagondes Cuffs +1", augments={'Phys. dmg. taken -2%','"Mag.Atk.Bns."+13',}},
			legs="Assid. Pants +1",feet="Mallquis Clogs +1",neck="Twilight Torque",
			waist="Fucho-no-Obi",left_ear="Ethereal Earring",right_ear="Eabani Earring",left_ring="Defending Ring",
			right_ring={ name="Dark Ring", augments={'Enemy crit. hit rate -3','Magic dmg. taken -4%','Phys. dmg. taken -3%',}},back="Solemnity Cape",}
	-- Kiting is engaged and disengaged by pressing right alt + f10
    sets.Kiting = {main="Earth Staff",sub="Umbra Strap",ammo="Staunch Tathlum",
			head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
			body={ name="Witching Robe", augments={'MP+50','Mag. Acc.+15','"Mag.Atk.Bns."+15','"Refresh"+1',}},
			hands={ name="Hagondes Cuffs +1", augments={'Phys. dmg. taken -2%','"Mag.Atk.Bns."+13',}},
			legs="Assid. Pants +1",neck="Twilight Torque",
			waist="Fucho-no-Obi",left_ear="Ethereal Earring",right_ear="Eabani Earring",left_ring="Defending Ring",
			right_ring={ name="Dark Ring", augments={'Enemy crit. hit rate -3','Magic dmg. taken -4%','Phys. dmg. taken -3%',}},back="Solemnity Cape",feet="Herald's Gaiters"}
	 
    sets.latent_refresh = {legs="Fucho-no-Obi"}
 
 
    sets.Sublimation = {}
 
    -- Engaged sets
 
    -- Set used when attacking mob, pretty basic.
	
	sets.engaged = {main="Earth Staff",sub="Umbra Strap",ammo="Homiliary",
			head={ name="Merlinic Hood", augments={'Mag. Acc.+23 "Mag.Atk.Bns."+23','Magic burst dmg.+5%','INT+9','Mag. Acc.+5',}},
			body={ name="Witching Robe", augments={'MP+50','Mag. Acc.+15','"Mag.Atk.Bns."+15','"Refresh"+1',}},
			hands={ name="Hagondes Cuffs +1", augments={'Phys. dmg. taken -2%','"Mag.Atk.Bns."+13',}},
			legs="Assid. Pants +1",feet="Mallquis Clogs +1",neck="Twilight Torque",
			waist="Fucho-no-Obi",left_ear="Ethereal Earring",right_ear="Eabani Earring",left_ring="Defending Ring",
			right_ring={ name="Dark Ring", augments={'Enemy crit. hit rate -3','Magic dmg. taken -4%','Phys. dmg. taken -3%',}},back="Solemnity Cape",}
end
-------------------------------------------------------------------------------------------------------------------
-- Job-specific hooks for standard casting events.
-------------------------------------------------------------------------------------------------------------------
 

function job_precast(spell, action, spellMap, eventArgs)
end
    
function job_post_precast(spell, action, spellMap, eventArgs)
if spell.english == "Impact" then
        equip({head=empty,body="Twilight Cloak"})
    elseif spellMap == 'Cure' or spellMap == 'Curaga' then
        gear.default.obi_waist = "Hachirin-no-obi"
    end
end
 
-- Set eventArgs.handled to true if we don't want any automatic gear equipping to be done.
function job_midcast(spell, action, spellMap, eventArgs)

end


 function job_post_midcast(spell, action, spellMap, eventArgs)
    if spell.element == world.day_element or spell.element == world.weather_element then
        if string.find(spell.english,'helix') then
            equip(sets.midcast['Helix'])
			end
end
	if buffactive['Perpetuance'] then
	equip(sets.midcast.Perpetuance)
	end	
	if buffactive['Rapture'] then
	equip(sets.midcast.Rapture)
	end	
	if buffactive['Ebullience'] then
	equip(sets.midcast.Ebullience)
	end	
 end
function job_aftercast(spell, action, spellMap, eventArgs)
			if spell.action_type == 'Ability' and spell.english == 'Sublimation' then 
			send_command('wait 1;gs c update')
		end

    if not spell.interrupted then     
		elseif spell.english == "Sleep II" or spell.english == "Sleepga II" then -- Sleep II Countdown --
            send_command('wait 60;input /echo Sleep Effect: [WEARING OFF IN 30 SEC.];wait 15;input /echo Sleep Effect: [WEARING OFF IN 15 SEC.];wait 10;input /echo Sleep Effect: [WEARING OFF IN 5 SEC.]')
        elseif spell.english == "Sleep" or spell.english == "Sleepga" then -- Sleep & Sleepga Countdown --
            send_command('wait 30;input /echo Sleep Effect: [WEARING OFF IN 30 SEC.];wait 15;input /echo Sleep Effect: [WEARING OFF IN 15 SEC.];wait 10;input /echo Sleep Effect: [WEARING OFF IN 5 SEC.]')
        elseif buffactive["Light Arts"] and spell.english == "Regen" then -- Regen Countdown --
            send_command('wait 90;input /echo Regen Effect: [WEARING OFF IN 30 SEC.];wait 15;input /echo Regen Effect: [WEARING OFF IN 15 SEC.];wait 10;input /echo Regen Effect: [WEARING OFF IN 5 SEC.]')
		elseif spell.english == "Regen"and not buffactive ["Light Arts"] then -- Regen Countdown --
            send_command('wait 30;input /echo Regen Effect: [WEARING OFF IN 30 SEC.];wait 15;input /echo Regen Effect: [WEARING OFF IN 15 SEC.];wait 10;input /echo Regen Effect: [WEARING OFF IN 5 SEC.]')
		elseif buffactive["Dark Arts"] and spell.english == 'Helix' then -- Helix Countdown --
            send_command('wait 90;input /echo Helix Effect: [WEARING OFF IN 30 SEC.];wait 15;input /echo Helix Effect: [WEARING OFF IN 15 SEC.];wait 10;input /echo Helix Effect: [WEARING OFF IN 5 SEC.]')
		elseif spell.english == 'Helix' and not buffactive["Dark Arts"]then -- helix Countdown --
            send_command('wait 30;input /echo Helix Effect: [WEARING OFF IN 30 SEC.];wait 15;input /echo Helix Effect: [WEARING OFF IN 15 SEC.];wait 10;input /echo Helix Effect: [WEARING OFF IN 5 SEC.]')
		elseif spell.english == "Break" then -- Break Countdown --
            send_command('wait 20;input /echo Break Effect: [WEARING OFF IN 10 SEC.]')
        elseif spell.english == "Paralyze" then -- Paralyze Countdown --
             send_command('wait 110;input /echo Paralyze Effect: [WEARING OFF IN 10 SEC.]')
        elseif spell.english == "Slow" then -- Slow Countdown --
            send_command('wait 110;input /echo Slow Effect: [WEARING OFF IN 10 SEC.]') 
		elseif spell.english == "Dia" then -- dia Countdown --
            send_command('wait 50;input /echo Dia Effect: [WEARING OFF IN 10 SEC.]')
		elseif spell.english == "Dia II" then -- Slow Countdown --
            send_command('wait 110;input /echo Dia II Effect: [WEARING OFF IN 10 SEC.]')  
        elseif spell.english == "Bio" then -- Bio Countdown --
            send_command('wait 50;input /echo Bio Effect: [WEARING OFF IN 10 SEC.]') 
		elseif spell.english == "Bio II" then -- Bio Countdown --
            send_command('wait 110;input /echo Bio II Effect: [WEARING OFF IN 10 SEC.]') 
		end
    end
 

function nuke(spell, action, spellMap, eventArgs)
    if player.target.type == 'MONSTER' then
        if state.AOE.value then
            send_command('input /ma "'..degrade_array[element_table:append('ga')][#degrade_array[element_table:append('ga')]]..'" '..tostring(player.target.name))
        else
            send_command('input /ma "'..degrade_array[element_table][#degrade_array[element_table]]..'" '..tostring(player.target.name))
        end
    else 
        add_to_chat(5,'A Monster is not targetted.')
    end
end
 
function job_self_command(commandArgs, eventArgs)
    if commandArgs[1] == 'element' then
        if commandArgs[2] then
            if element_table:contains(commandArgs[2]) then
                element_table = commandArgs[2]
                add_to_chat(5, 'Current Nuke element ['..element_table..']')
            else
                add_to_chat(5,'Incorrect Element value')
                return
            end
        else
            add_to_chat(5,'No element specified')
        end
    elseif commandArgs[1] == 'nuke' then
        nuke()
    end
end
 
 
function refine_various_spells(spell, action, spellMap, eventArgs)
    local aspirs = S{'Aspir','Aspir II','Aspir III'}
    local sleeps = S{'Sleep','Sleep II'}
    local sleepgas = S{'Sleepga','Sleepga II'}
 
    local newSpell = spell.english
    local spell_recasts = windower.ffxi.get_spell_recasts()
    local cancelling = 'All '..spell.english..' spells are on cooldown. Cancelling spell casting.'
 
    local spell_index
 
    if spell_recasts[spell.recast_id] > 0 then
        if spell.skill == 'Elemental Magic' then
            local ele = tostring(spell.element):append('ga')
            --local ele2 = string.sub(ele,1,-2)
            if table.find(degrade_array[ele],spell.name) then
                spell_index = table.find(degrade_array[ele],spell.name)
                if spell_index > 1 then
                    newSpell = degrade_array[ele][spell_index - 1]
                    add_to_chat(8,spell.name..' Canceled: ['..player.mp..'/'..player.max_mp..'MP::'..player.mpp..'%] Casting '..newSpell..' instead.')
                    send_command('@input /ma '..newSpell..' '..tostring(spell.target.raw))
                    eventArgs.cancel = true
                end
            else 
                spell_index = table.find(degrade_array[spell.element],spell.name)
                if spell_index > 1 then
                    newSpell = degrade_array[spell.element][spell_index - 1]
                    add_to_chat(8,spell.name..' Canceled: ['..player.mp..'/'..player.max_mp..'MP::'..player.mpp..'%] Casting '..newSpell..' instead.')
                    send_command('@input /ma '..newSpell..' '..tostring(spell.target.raw))
                    eventArgs.cancel = true
                end
            end
        elseif aspirs:contains(spell.name) then
            spell_index = table.find(degrade_array['Aspirs'],spell.name)
            if spell_index > 1 then
                newSpell = degrade_array['Aspirs'][spell_index - 1]
                add_to_chat(8,spell.name..' Canceled: ['..player.mp..'/'..player.max_mp..'MP::'..player.mpp..'%] Casting '..newSpell..' instead.')
                send_command('@input /ma '..newSpell..' '..tostring(spell.target.raw))
                eventArgs.cancel = true
            end
        elseif sleepgas:contains(spell.name) then
            spell_index = table.find(degrade_array['Sleepgas'],spell.name)
            if spell_index > 1 then
                newSpell = degrade_array['Sleepgas'][spell_index - 1]
                add_to_chat(8,spell.name..' Canceled: ['..player.mp..'/'..player.max_mp..'MP::'..player.mpp..'%] Casting '..newSpell..' instead.')
                send_command('@input /ma '..newSpell..' '..tostring(spell.target.raw))
                eventArgs.cancel = true
            end
        end
    end
end

mov = {counter=0}
if player and player.index and windower.ffxi.get_mob_by_index(player.index) then
    mov.x = windower.ffxi.get_mob_by_index(player.index).x
    mov.y = windower.ffxi.get_mob_by_index(player.index).y
    mov.z = windower.ffxi.get_mob_by_index(player.index).z
end

mov = {counter=0}
if player and player.index and windower.ffxi.get_mob_by_index(player.index) then
    mov.x = windower.ffxi.get_mob_by_index(player.index).x
    mov.y = windower.ffxi.get_mob_by_index(player.index).y
    mov.z = windower.ffxi.get_mob_by_index(player.index).z
end


moving = false
windower.raw_register_event('prerender',function()
    mov.counter = mov.counter + 1;
    if mov.counter>15 then
        local pl = windower.ffxi.get_mob_by_index(player.index)
        if pl and pl.x and mov.x then
            dist = math.sqrt( (pl.x-mov.x)^2 + (pl.y-mov.y)^2 + (pl.z-mov.z)^2 )
            if dist > 1 and not moving then
                state.Moving.value = true
                send_command('gs c update')
                send_command('gs equip sets.MoveSpeed')
                if world.area:contains("Adoulin") then
                    send_command('gs equip sets.Adoulin')
                end

                moving = true

            elseif dist < 1 and moving then
                state.Moving.value = false
                send_command('gs c update')
                moving = false
            end
        end
        if pl and pl.x then
            mov.x = pl.x
            mov.y = pl.y
            mov.z = pl.z
        end
        mov.counter = 0
    end
end)

-------------------------------------------------------------------------------------------------------------------
-- Job-specific hooks for non-casting events.
-------------------------------------------------------------------------------------------------------------------
--function job_buff_change(buff, gain)
-- Handle notifications of general user state change.
-------------------------------------------------------------------------------------------------------------------
-- User code that supplements standard library decisions.
-------------------------------------------------------------------------------------------------------------------
function job_state_change(stateField, newValue, oldValue)
    if stateField == 'Offense Mode' then
        if newValue == 'Locked' then
            disable('main','sub','range')
        else
            enable('main','sub','range')
        end
    end
end

function display_current_job_state(eventArgs)
    eventArgs.handled = true
    local msg = ''
     
    if state.OffenseMode.value ~= 'None' then
        msg = msg .. 'Combat ['..state.OffenseMode.value..']'
 
        if state.CombatForm.has_value then
            msg = msg .. ' (' .. state.CombatForm.value .. ')'
        end
        msg = msg .. ', '
    end
    --[[if state.HybridMode.value ~= 'Normal' then
        msg = msg .. '/' .. state.HybridMode.value
    end]]
 
    msg = msg .. 'Casting ['..state.CastingMode.value..'], Idle ['..state.IdleMode.value..']'
 
    if state.MagicBurst.value then
        msg = msg .. ', MB [ON]'
    else
        msg = msg .. ', MB [OFF]'
    end

    if state.DefenseMode.value ~= 'None' then
        msg = msg .. ', ' .. 'Defense: ' .. state.DefenseMode.value .. ' (' .. state[state.DefenseMode.value .. 'DefenseMode'].value .. ')'
    end
     
    if state.Kiting.value then
        msg = msg .. ', Kiting [ON]'
    end
 
    if state.PCTargetMode.value ~= 'default' then
        msg = msg .. ', Target PC: '..state.PCTargetMode.value
    end
 
    if state.SelectNPCTargets.value == true then
        msg = msg .. ', Target NPCs'
    end
 
    add_to_chat(122, msg)
end
 
-- Custom spell mapping.
function job_get_spell_map(spell, default_spell_map)
    if spell.skill == 'Elemental Magic' and default_spell_map ~= 'ElementalEnfeeble' then
        if lowTierNukes:contains(spell.english) then
            return 'LowTierNuke'
        else
            return 'HighTierNuke'
        end
    end
end
 
-- Modify the default idle set after it was constructed.
-- This set Directly modifies the idle set if sublimation is activated, and when activated with pdt or mdt idle
-- Generally this set should not be tampered with as it will mess up idle sets and your latent refresh.
function customize_idle_set(idleSet)		
	if buffactive['Sublimation: Activated'] then
        if state.IdleMode.value == 'PDT' then
            idleSet = sets.idle.PDT
        elseif state.IdleMode.value == 'MDT' then
			idleSet = sets.idle.MDT
        elseif state.IdleMode.value == 'Normal' then
            idleSet = sets.Sublimation
        end
    end

    if player.mpp < 51 then
        idleSet = set_combine(idleSet, sets.latent_refresh)
    end
		
    return idleSet
end




 



-------------------------------------------------------------------------------------------------------------------
-- Utility functions specific to this job.
-------------------------------------------------------------------------------------------------------------------
 
-- Select default macro book on initial load or subjob change.
function select_default_macro_book()
    set_macro_page(1, 15)
end
