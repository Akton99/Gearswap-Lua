
--==============================================================--
--      __                       ___                            --
--     /  |                     /                               --
--    (___|      ___  ___      (___  ___  ___  ___  ___  ___    --
--    |\   |   )|   )|___)     |    |___)|   )|    |___)|   )   --
--    | \  |__/ |  / |__       |    |__  |  / |__  |__  |       --
--==============================================================--


-- Initialization function for this job file.
function get_sets()
    mote_include_version = 2
	
	-- Load and initialize the include file.
	include('Mote-Include.lua')
	 include('organizer-lib')
end


-- Setup vars that are user-independent.
function job_setup()
	playermoving  = M(false, "moving")

    -- Table of entries
    rune_timers = T{}
    -- entry = rune, index, expires

    if player.main_job_level >= 65 then
        max_runes = 3
    elseif player.main_job_level >= 35 then
        max_runes = 2
    elseif player.main_job_level >= 5 then
        max_runes = 1
    else
        max_runes = 0
    end
end

--================================================--
--                                                --
--      |     |        ,---.     |                --
--      |,---.|---.    `---.,---.|--- .   .,---.  --
--      ||   ||   |        ||---'|    |   ||   |  --
--  `---'`---'`---'    `---'`---'`---'`---'|---'  --
--                                         |      --
--================================================--

function user_setup()
    state.OffenseMode:options('Normal','Resist','Acc','TH','PDT','MDT')
    state.PhysicalDefenseMode:options('PDT')
    state.IdleMode:options('Normal', 'PDT', 'MDT')
	
	send_command('bind f10 gs c cycle IdleMode')
	send_command('bind f12 gs disable main sub;input /echo Weapons Locked;')
	send_command('bind f9 gs c cycle OffenseMode')
	select_default_macro_book()
end

function user_unload()
    send_command('unbind f12')
    send_command('unbind f11')
	send_command('unbind f10')
end

function init_gear_sets()
    
	sets.enmity = {
		main="Lionheart",
		sub="Utu Grip",
		ammo="Mantoptera Eye",
		--head="Halitus Helm",
		body="Emet Harness +1",
		hands="Kurys Gloves",
		neck="Unmoving Collar +1",
		feet="Erilaz Greaves",
		legs="Eri. Leg Guards +1",
		left_ear="Friomisi Earring",
		left_ring="Petrov Ring",
		right_ring="Begrudging Ring",
		back="Earthcry Mantle"}

--=================================--
--      ___       _   _            --
--     |_ _|   __| | | |   ___     --
--      | |   / _` | | |  / _ \    --
--      | |  | (_| | | | |  __/    --
--     |___|  \__,_| |_|  \___|    --
--=================================--

    sets.idle = {
	main="Lionheart",
    sub="Utu Grip",
    ammo="Mantoptera Eye",
    head="Rawhide Mask",
    body="Futhark coat +1",
    hands="Meg. Gloves +2",
    legs={ name="Carmine Cuisses +1", augments={'Accuracy+20','Attack+12','"Dual Wield"+6',}},
    feet="Meg. Jam. +1",
    neck="Sanctity Necklace",
    waist="Flume Belt +1",
    left_ear="Telos Earring",
    right_ear="Ethereal Earring",
    left_ring="Defending Ring",
    right_ring="Paguroidea Ring",
    back="Earthcry Mantle"}

	sets.idle.PDT = {
		    main="Aettir",
			sub="Utu Grip",
			ammo="Staunch Tathlum",
			head="Futhark Bandeau +1",
			body="Futhark coat +1",
			hands="Meg. Gloves +2",
			legs="Eri. Leg Guards +1",
			feet="Meg. Jam. +1",
			neck="Twilight Torque",
			waist="Flume Belt +1",
			left_ear="Telos Earring",
			right_ear="Ethereal Earring",
			left_ring="Defending Ring",
			right_ring="Moonbeam ring",
			back="Moonbeam Cape"}

	sets.idle.MDT = {
		    main="Lionheart",
			sub="Utu Grip",
			ammo="Staunch Tathlum",
			head="Dampening tam",
			body="Futhark coat +1",
			hands="Meg. Gloves +2",
			legs="Meg. Chausses +1",
			feet="Meg. Jam. +1",
			neck="Twilight Torque",
			waist="Flume Belt +1",
			left_ear="Telos Earring",
			right_ear="Ethereal Earring",
			left_ring="Defending Ring",
			right_ring="Moonbeam ring",
			back="Moonbeam Cape"}
		

	sets.latent_refresh = {waist="Fucho-no-obi"}
		
--====================================================--
--     _____   ____      ____           _             --
--    |_   _| |  _ \    / ___|    ___  | |_   ___     --
--      | |   | |_) |   \___ \   / _ \ | __| / __|    --
--      | |   |  __/     ___) | |  __/ | |_  \__ \    --
--      |_|   |_|       |____/   \___|  \__| |___/    --
--====================================================--

    sets.engaged = { main="Lionheart",
		sub="Utu Grip",
		ammo="Ginsen",
		head="Dampening tam",
		body={ name="Herculean Vest", augments={'Accuracy+23 Attack+23','"Triple Atk."+4','Attack+14',}},
		hands={ name="Adhemar Wristbands", augments={'DEX+10','AGI+10','Accuracy+15',}},
		legs={ name="Samnuha Tights", augments={'STR+10','DEX+10','"Dbl.Atk."+3','"Triple Atk."+3',}},
		feet={ name="Herculean Boots", augments={'Attack+27','"Triple Atk."+4','Accuracy+15',}},
		neck="Asperity Necklace",
		waist="Windbuffet Belt +1",
		left_ear="Sherida Earring",
		right_ear="Brutal Earring",
		left_ring="Niqmaddu Ring",
		right_ring="Epona's Ring",
		back={ name="Ogma's cape", augments={'DEX+20','Accuracy+20 Attack+20','DEX+4','"Dbl.Atk."+10',}}}
	
    sets.engaged.Resist = {
    main="Lionheart",
    sub="Utu Grip",
    ammo="Staunch Tathlum",
    head="Dampening tam",
    body={ name="Herculean Vest", augments={'Accuracy+23 Attack+23','"Triple Atk."+4','Attack+14',}},
    hands={ name="Adhemar Wristbands", augments={'DEX+10','AGI+10','Accuracy+15',}},
    legs="Runeist trousers +1",
    feet={ name="Herculean Boots", augments={'Attack+27','"Triple Atk."+4','Accuracy+15',}},
    neck="Asperity Necklace",
    waist="Windbuffet Belt +1",
    left_ear="Hearty earring",
    right_ear="Brutal Earring",
    left_ring="Niqmaddu Ring",
    right_ring="Epona's Ring",
    back="Ogma's cape"}
	
	sets.engaged.Acc = set_combine(sets.engaged.DD, {head="Carmine Mask",legs="Carmine Cuisses +1",waist="Kentarch Belt +1"})
	
    sets.engaged.TH = set_combine(sets.engaged.DD, {    head={ name="Herculean Helm", augments={'DEX+2','Accuracy+23','"Treasure Hunter"+2','Mag. Acc.+7 "Mag.Atk.Bns."+7',}},
    hands={ name="Herculean Gloves", augments={'AGI+1','Spell interruption rate down -9%','"Treasure Hunter"+2','Mag. Acc.+1 "Mag.Atk.Bns."+1',}}})
    
	sets.engaged.PDT = {
			main="Aettir",
			sub="Utu Grip",
			ammo="Staunch Tathlum",
			head="Dampening tam",
			body="Futhark Coat +1",
			hands="Meg. Gloves +2",
			legs="Samnuha tights",
			feet="Erilaz Greaves",
			neck="Twilight Torque",
			waist="Flume Belt +1",
			left_ear="Ethereal Earring",
			right_ear="Eabani Earring",
			left_ring="Defending Ring",
			right_ring="Moonbeam Ring",
			back="Moonbeam Cape",}
    
	sets.engaged.MDT = {
		main="Lionheart",
		sub="Utu Grip",
		ammo="Staunch Tathlum",
		head="Dampening tam",
		body="Futhark Coat +1",
		hands="Meg. Gloves +2",
		legs="Samnuha tights",
		feet="Erilaz Greaves",
		neck="Twilight Torque",
		waist="Flume Belt +1",
		left_ear="Ethereal Earring",
		right_ear="Eabani Earring",
		left_ring="Defending Ring",
		right_ring="Moonbeam Ring",
		back="Moonbeam Cape",}
	
    sets.engaged.repulse = {back="Repulse Mantle"}

	sets.Adoulin = {body="Councilor's Garb",}
	
	sets.MoveSpeed = {legs = "Carmine Cuisses +1",}
	

--===============================================================================--		
-- __        __                                               _      _   _   _   --
-- \ \      / /   ___    __ _   _ __     ___    _ __    ___  | | __ (_) | | | |  --
--  \ \ /\ / /   / _ \  / _` | | '_ \   / _ \  | '_ \  / __| | |/ / | | | | | |  --
--   \ V  V /   |  __/ | (_| | | |_) | | (_) | | | | | \__ \ |   <  | | | | | |  --
--    \_/\_/     \___|  \__,_| | .__/   \___/  |_| |_| |___/ |_|\_\ |_| |_| |_|  --
--                             |_|                                               --
--===============================================================================--


    sets.precast.WS['Resolution'] = {
				sub="Utu Grip",
				ammo="Knobkierrie",
				head={ name="Dampening Tam", augments={'DEX+10','Accuracy+15','Mag. Acc.+15','Quadruple Attack +3',}},
				body={ name="Herculean Vest", augments={'Accuracy+23 Attack+23','"Triple Atk."+4','Attack+14',}},
				hands={ name="Adhemar Wristbands", augments={'DEX+10','AGI+10','Accuracy+15',}},
				legs={ name="Samnuha Tights", augments={'STR+10','DEX+10','"Dbl.Atk."+3','"Triple Atk."+3',}},
				feet={ name="Herculean Boots", augments={'Attack+27','"Triple Atk."+4','Accuracy+15',}},
				neck="Fotia Gorget",
				waist="Fotia Belt",
				left_ear="Sherida Earring",
				right_ear="Brutal Earring",
				left_ring="Niqmaddu Ring",
				right_ring="Epona's Ring",
				back={ name="Ogma's cape", augments={'DEX+20','Accuracy+20 Attack+20','DEX+4','"Dbl.Atk."+10',}}}
	
    sets.precast.WS['Resolution'].Acc = set_combine(sets.precast.WS['Resolution'].Normal, {})
	
    sets.precast.WS['Dimidiation'] = {
			sub="Utu Grip",
			ammo="Knobkierrie",
			head={ name="Herculean Helm", augments={'Weapon skill damage +5%','DEX+9','Accuracy+15',}},
			body={ name="Herculean Vest", augments={'Weapon skill damage +4%','Accuracy+10',}},
			hands="Meg. Gloves +2",
			legs={ name="Herculean Trousers", augments={'Weapon skill damage +5%','INT+3','Attack+11',}},
			feet={ name="Herculean Boots", augments={'Accuracy+17','Weapon skill damage +5%',}},
			neck="Fotia Gorget",
			waist="Fotia Belt",
			left_ear="Ishvara Earring",
			right_ear="Brutal Earring",
			left_ring="Hetairoi Ring",
			right_ring="Epona's Ring",
			back="Ogma's cape"}
	
	sets.precast.WS['Ground Slash'] = {
		
			sub="Utu Grip",
			ammo="Knobkierrie",
			head={ name="Herculean Helm", augments={'Weapon skill damage +5%','DEX+9','Accuracy+15',}},
			body={ name="Herculean Vest", augments={'Weapon skill damage +4%','Accuracy+10',}},
			hands="Meg. Gloves +2",
			legs={ name="Herculean Trousers", augments={'Weapon skill damage +5%','INT+3','Attack+11',}},
			feet={ name="Herculean Boots", augments={'Accuracy+17','Weapon skill damage +5%',}},
			neck="Fotia Gorget",
			waist="Fotia Belt",
			left_ear="Ishvara Earring",
			right_ear="Brutal Earring",
			left_ring="Hetairoi Ring",
			right_ring="Epona's Ring",
			back="Ogma's cape"}
		
	sets.precast.WS['Ground Slash'].Acc = sets.precast.WS['Ground Slash']
	
    sets.precast.WS['Dimidiation'].Acc = set_combine(sets.precast.WS['Dimidiation'].Normal, {})
		
    sets.precast.WS['Herculean Slash'] = set_combine(sets.precast['Lunge'], {hands="Umuthi Gloves"})
    sets.precast.WS['Herculean Slash'].Acc = set_combine(sets.precast.WS['Herculean Slash'].Normal, {})	
	
	
	
--==================================================--
--  ____                                       _    --
-- |  _ \   _ __    ___    ___    __ _   ___  | |_  --
-- | |_) | | '__|  / _ \  / __|  / _` | / __| | __| --
-- |  __/  | |    |  __/ | (__  | (_| | \__ \ | |_  --
-- |_|     |_|     \___|  \___|  \__,_| |___/  \__| --
--==================================================--

	-- Precast sets to enhance JAs
    
	sets.precast.JA['Vallation'] = {
		body="Runeist coat", 
		legs="Futhark trousers +1"}
    
	sets.precast.JA['Valiance'] = sets.precast.JA['Vallation']
    
	sets.precast.JA['Pflug'] = {
		feet="Runeist's Boots"}
    
	sets.precast.JA['Battuta'] = {
		head="Futhark Bandeau +1"}
    
	sets.precast.JA['Liement'] = {
		body="Futhark Coat +1"}
    
	sets.precast.JA['Lunge'] = {}
    
	sets.precast.JA['Swipe'] = sets.precast.JA['Lunge']
    
	sets.precast.JA['Gambit'] = {
		hands="Runeist's Mitons"}
    
	sets.precast.JA['Rayke'] = {
		feet="Futhark Boots"}
    
	sets.precast.JA['Elemental Sforzo'] = {
		body="Futhark Coat +1"}
    
	sets.precast.JA['Swordplay'] = {
		hands="Futhark Mitons"}
    
	sets.precast.JA['Embolden'] = {
		back="Evasionist's Cape"}
    
	sets.precast.JA['Vivacious Pulse'] = {
		legs="Runeist's Trousers +1 +1", 
		head="Erilaz Galea +1"}
    
	sets.precast.JA['One For All'] = {}
    
	sets.precast.JA['Provoke'] = sets.enmity
		
	sets.midcast.Emnity = {
		sub="Utu Grip",
		ammo="Mantoptera Eye",
		--head="Halitus Helm",
		body="Emet Harness +1",
		hands="Kurys Gloves",
		neck="Unmoving Collar +1",
		feet="Erilaz Greaves",
		legs="Eri. Leg Guards +1",
		left_ear="Friomisi Earring",
		left_ring="Petrov Ring",
		right_ring="Begrudging Ring",
		back="Earthcry Mantle"}

	sets.midcast.Provoke = {
		sub="Utu Grip",
		ammo="Mantoptera Eye",
		--head="Halitus Helm",
		body="Emet Harness +1",
		hands="Kurys Gloves",
		neck="Unmoving Collar +1",
		feet="Erilaz Greaves",
		legs="Eri. Leg Guards +1",
		left_ear="Friomisi Earring",
		left_ring="Petrov Ring",
		right_ring="Begrudging Ring",
		back="Earthcry Mantle"}
		
	-- Fast cast sets for spells
	
    sets.precast.FC = {
		
    sub="Utu Grip",
    ammo="Impatiens",
    head={ name="Carmine Mask", augments={'Accuracy+15','Mag. Acc.+10','"Fast Cast"+3',}},
    body="Dread jupon",
    hands={ name="Leyline Gloves", augments={'Accuracy+12','Mag. Acc.+14','"Mag.Atk.Bns."+15','"Fast Cast"+2',}},
    legs={ name="Herculean Trousers", augments={'Crit.hit rate+1','Phys. dmg. taken -1%','"Treasure Hunter"+1',}},
    feet="Chelona Boots",
    neck="Orunmila's Torque",
    waist="Chaac Belt",
    left_ear="Loquac. Earring",
    left_ring="Kishar Ring",
    right_ring="Prolix Ring"}
		
	sets.precast.FC['Enhancing Magic'] = set_combine(sets.precast.FC, {waist="Siegel Sash", legs="Futhark Trousers +1"})
	
	sets.precast.FC['Utsusemi: Ichi'] = set_combine(sets.precast.FC, {neck="Magoraga beads", back="Mujin Mantle"})
	
	sets.precast.FC['Utsusemi: Ni'] = set_combine(sets.precast.FC['Utsusemi: Ichi'], {})



--==================================================--
--   __  __   _       _                        _    --
--  |  \/  | (_)     | |                      | |   --
--  | \  / |  _    __| |   ___    __ _   ___  | |_  --
--  | |\/| | | |  / _` |  / __|  / _` | / __| | __| --
--  | |  | | | | | (_| | | (__  | (_| | \__ \ | |_  --
--  |_|  |_| |_|  \__,_|  \___|  \__,_| |___/  \__| --
--                                                  --
--==================================================--


    sets.midcast.FastRecast = {}
    sets.midcast['Enhancing Magic'] = {
    sub="Utu Grip",
    ammo="Staunch Tathlum",
    head="Erilaz Galea +1",
    hands="Runeist Mitons",
    legs={ name="Futhark Trousers +1", augments={'Enhances "Inspire" effect',}},
    neck="Melic Torque",
    waist="Hachirin-no-Obi",}
    
	sets.midcast['Phalanx'] = 
	set_combine(sets.midcast['Enhancing Magic'], {
		head="Futhark Bandeau +1"})
    
	sets.midcast['Regen'] = set_combine(sets.midcast['Enhancing Magic'], {
		head="Runeist Bandeau", 
		legs="Futhark Trousers +1"})
    
	sets.midcast['Stoneskin'] = set_combine(sets.midcast['Enhancing Magic'], {
		waist="Siegel Sash"})
    
	sets.midcast.Cure = {
		neck="Colossus's Torque", 
		hands="Buremte Gloves", 
		ring1="Ephedra Ring", 
		feet="Futhark Boots +1",
		left_ear="Mendicant's Earring"}
	
	sets.midcast['Refresh'] = 
	set_combine(sets.midcast['Enhancing Magic'], {
		head="Erilaz Galea +1", 
		waist="Gishdubar Sash"})

	sets.midcast.Flash = {
		sub="Utu Grip",
		ammo="Mantoptera Eye",
		--head="Halitus Helm",
		body="Emet Harness +1",
		hands="Kurys Gloves",
		neck="Unmoving Collar +1",
		feet="Erilaz Greaves",
		legs="Eri. Leg Guards +1",
		left_ear="Friomisi Earring",
		left_ring="Petrov Ring",
		right_ring="Begrudging Ring",
		back="Earthcry Mantle"}
		


	end
	
--======================================================================--
--    __  __                                                     _      --
--   |  \/  |   ___   __   __   ___   _ __ ___     ___   _ __   | |_    --
--   | |\/| |  / _ \  \ \ / /  / _ \ | '_ ` _ \   / _ \ | '_ \  | __|   --
--   | |  | | | (_) |  \ V /  |  __/ | | | | | | |  __/ | | | | | |_    --
--   |_|  |_|  \___/    \_/    \___| |_| |_| |_|  \___| |_| |_|  \__|   --
--======================================================================--



mov = {counter=0}
if player and player.index and windower.ffxi.get_mob_by_index(player.index) then
    mov.x = windower.ffxi.get_mob_by_index(player.index).x
    mov.y = windower.ffxi.get_mob_by_index(player.index).y
    mov.z = windower.ffxi.get_mob_by_index(player.index).z
end


moving = false
windower.raw_register_event('prerender',function()
    mov.counter = mov.counter + 1;
    if mov.counter>15 then
        local pl = windower.ffxi.get_mob_by_index(player.index)
        if pl and pl.x and mov.x then
            dist = math.sqrt( (pl.x-mov.x)^2 + (pl.y-mov.y)^2 + (pl.z-mov.z)^2 )
            if dist > 1 and not moving then
                playermoving.value = true
                send_command('gs c update')
				if world.area:contains("Adoulin") then
                send_command('gs equip sets.Adoulin')
				else
                send_command('gs equip sets.MoveSpeed')
                end

                moving = true

            elseif dist < 1 and moving then
                playermoving.value = false
                send_command('gs c update')
                moving = false
            end
        end
        if pl and pl.x then
            mov.x = pl.x
            mov.y = pl.y
            mov.z = pl.z
        end
        mov.counter = 0
    end
end)

--==================================================================--
--   _____                          _     _                         --
--  |  ___|  _   _   _ __     ___  | |_  (_)   ___    _ __    ___   --
--  | |_    | | | | | '_ \   / __| | __| | |  / _ \  | '_ \  / __|  --
--  |  _|   | |_| | | | | | | (__  | |_  | | | (_) | | | | | \__ \  --
--  |_|      \__,_| |_| |_|  \___|  \__| |_|  \___/  |_| |_| |___/  --
--==================================================================--


-- Run after the default midcast() is done.
-- eventArgs is the same one used in job_midcast, in case information needs to be persisted.
function job_post_midcast(spell, action, spellMap, eventArgs)
    if spell.english == 'Lunge' or spell.english == 'Swipe' then
        local obi = get_obi(get_rune_obi_element())
        if obi then
            equip({waist=obi})
        end
    end
end


function job_aftercast(spell)
    if not spell.interrupted then
        if spell.type == 'Rune' then
            update_timers(spell)
        elseif spell.name == "Lunge" or spell.name == "Gambit" or spell.name == 'Rayke' then
            reset_timers()
        elseif spell.name == "Swipe" then
            send_command(trim(1))
        end
    end
end

function job_midcast(spell, action, spellMap, eventArgs)
	if spell.english == 'Jettatura' or spell.english == 'Geist Wall' 
	or spell.english == 'Soporific' or spell.english == 'Blank Gaze' 
	or spell.english == 'Sheep Song' or spell.english == 'Chaotic Eye' 
	or spell.english == 'Cursed Sphere' or spell.english == 'Flash' then
	equip(sets.midcast.Flash)
	end
	end
--=-----------------------------=--
--          __   __   __   __    --
--    /|/| /  | /    /  | /  |   --
--   ( / |(___|(    (___|(   |   --
--   |   )|   )|   )|\   |   )   --
--   |  / |  / |__/ | \  |__/    --
--=-----------------------------=--

-- Select default macro book on initial load or subjob change.
function select_default_macro_book()
	-- Default macro set/book
	if player.sub_job == 'WAR' then
		set_macro_page(4, 5)
	elseif player.sub_job == 'NIN' then
		set_macro_page(1, 20)
	elseif player.sub_job == 'SAM' then
		set_macro_page(4, 5)
	else
		set_macro_page(4, 5)
	end
end


function customize_idle_set(idleSet)
	if player.mpp < 51 then
		idleSet = set_combine(idleSet, sets.latent_refresh)
	else return idleSet
	end
end



function get_rune_obi_element()
    weather_rune = buffactive[elements.rune_of[world.weather_element] or '']
    day_rune = buffactive[elements.rune_of[world.day_element] or '']

    local found_rune_element

    if weather_rune and day_rune then
        if weather_rune > day_rune then
            found_rune_element = world.weather_element
        else
            found_rune_element = world.day_element
        end
    elseif weather_rune then
        found_rune_element = world.weather_element
    elseif day_rune then
        found_rune_element = world.day_element
    end

    return found_rune_element
end

function get_obi(element)
    if element and elements.obi_of[element] then
        return (player.inventory[elements.obi_of[element]] or player.wardrobe[elements.obi_of[element]]) and elements.obi_of[element]
    end
end


------------------------------------------------------------------
-- Timer manipulation
------------------------------------------------------------------

-- Add a new run to the custom timers, and update index values for existing timers.
function update_timers(spell)
    local expires_time = os.time() + 300
    local entry_index = rune_count(spell.name) + 1

    local entry = {rune=spell.name, index=entry_index, expires=expires_time}

    rune_timers:append(entry)
    local cmd_queue = create_timer(entry).. ';wait 0.05;'

    cmd_queue = cmd_queue .. trim()

    add_to_chat(123,'cmd_queue='..cmd_queue)

    send_command(cmd_queue)
end

-- Get the command string to create a custom timer for the provided entry.
function create_timer(entry)
    local timer_name = '"Rune: ' .. entry.rune .. '-' .. tostring(entry.index) .. '"'
    local duration = entry.expires - os.time()
    return 'timers c ' .. timer_name .. ' ' .. tostring(duration) .. ' down'
end

-- Get the command string to delete a custom timer for the provided entry.
function delete_timer(entry)
    local timer_name = '"Rune: ' .. entry.rune .. '-' .. tostring(entry.index) .. '"'
    return 'timers d ' .. timer_name .. ''
end

-- Reset all timers
function reset_timers()
    local cmd_queue = ''
    for index,entry in pairs(rune_timers) do
        cmd_queue = cmd_queue .. delete_timer(entry) .. ';wait 0.05;'
    end
    rune_timers:clear()
    send_command(cmd_queue)
end

-- Get a count of the number of runes of a given type
function rune_count(rune)
    local count = 0
    local current_time = os.time()
    for _,entry in pairs(rune_timers) do
        if entry.rune == rune and entry.expires > current_time then
            count = count + 1
        end
    end
    return count
end

-- Remove the oldest rune(s) from the table, until we're below the max_runes limit.
-- If given a value n, remove n runes from the table.
function trim(n)
    local cmd_queue = ''

    local to_remove = n or (rune_timers:length() - max_runes)

    while to_remove > 0 and rune_timers:length() > 0 do
        local oldest
        for index,entry in pairs(rune_timers) do
            if oldest == nil or entry.expires < rune_timers[oldest].expires then
                oldest = index
            end
        end

        cmd_queue = cmd_queue .. prune(rune_timers[oldest].rune)
        to_remove = to_remove - 1
    end

    return cmd_queue
end

-- Drop the index of all runes of a given type.
-- If the index drops to 0, it is removed from the table.
function prune(rune)
    local cmd_queue = ''

    for index,entry in pairs(rune_timers) do
        if entry.rune == rune then
            cmd_queue = cmd_queue .. delete_timer(entry) .. ';wait 0.05;'
            entry.index = entry.index - 1
        end
    end

    for index,entry in pairs(rune_timers) do
        if entry.rune == rune then
            if entry.index == 0 then
                rune_timers[index] = nil
            else
                cmd_queue = cmd_queue .. create_timer(entry) .. ';wait 0.05;'
            end
        end
    end

    return cmd_queue
end


------------------------------------------------------------------
-- Reset events
------------------------------------------------------------------

windower.raw_register_event('zone change',reset_timers)
windower.raw_register_event('logout',reset_timers)
windower.raw_register_event('status change',function(new, old)
    if gearswap.res.statuses[new].english == 'Dead' then
        reset_timers()
    end
end)
